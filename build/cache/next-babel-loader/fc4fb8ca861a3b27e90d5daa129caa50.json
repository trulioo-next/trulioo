{"ast":null,"code":"/*\n* Apppliction reducer\n* We use immutableJS to ensure immutability on the application state level.\n*/\nimport { fromJS } from 'immutable';\nimport InitialState from './initialState'; // Register your reducers here.\n\nimport { APP_SUCCESS, APP_STARTLOADING, APP_STOPLOADING, APP_STARTUP_ERROR, PRODUCTS_LIST_ERROR } from '../types';\nexport default ((state = InitialState, action) => {\n  switch (action.type) {\n    case APP_SUCCESS:\n      return state.set('isLoading', false).set('isLoaded', true).set('error', null);\n\n    case APP_STARTLOADING:\n      return state.set('isLoading', true);\n\n    case APP_STOPLOADING:\n      return state.set('isLoading', false);\n\n    case APP_STARTUP_ERROR:\n      return state.set('errorSource', 'Startup').set('error', action.payload).set('isLoading', false);\n\n    case PRODUCTS_LIST_ERROR:\n      return state.set('errorSource', 'Products list').set('error', action.payload).set('isLoading', false);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Applications/AMPPS/www/react-repo-2020-7eleven.ca/stores/app/reducers.js"],"names":["fromJS","InitialState","APP_SUCCESS","APP_STARTLOADING","APP_STOPLOADING","APP_STARTUP_ERROR","PRODUCTS_LIST_ERROR","state","action","type","set","payload"],"mappings":"AAAA;;;;AAKA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAA0C;;AAC1C,SACEC,WADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,mBALF,QAMO,UANP;AASA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAE/C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,WAAL;AACE,aAAOK,KAAK,CACTG,GADI,CACA,WADA,EACa,KADb,EAEJA,GAFI,CAEA,UAFA,EAEY,IAFZ,EAGJA,GAHI,CAGA,OAHA,EAGS,IAHT,CAAP;;AAKF,SAAKP,gBAAL;AACE,aAAOI,KAAK,CACTG,GADI,CACA,WADA,EACa,IADb,CAAP;;AAGF,SAAKN,eAAL;AACE,aAAOG,KAAK,CACTG,GADI,CACA,WADA,EACa,KADb,CAAP;;AAGF,SAAKL,iBAAL;AACE,aAAOE,KAAK,CACTG,GADI,CACA,aADA,EACe,SADf,EAEJA,GAFI,CAEA,OAFA,EAESF,MAAM,CAACG,OAFhB,EAGJD,GAHI,CAGA,WAHA,EAGa,KAHb,CAAP;;AAKF,SAAKJ,mBAAL;AACE,aAAOC,KAAK,CACTG,GADI,CACA,aADA,EACe,eADf,EAEJA,GAFI,CAEA,OAFA,EAESF,MAAM,CAACG,OAFhB,EAGJD,GAHI,CAGA,WAHA,EAGa,KAHb,CAAP;;AAKF;AACE,aAAOH,KAAP;AA7BJ;AA+BD,CAjCD","sourcesContent":["/*\n* Apppliction reducer\n* We use immutableJS to ensure immutability on the application state level.\n*/\n\nimport { fromJS } from 'immutable'\nimport InitialState from './initialState' // Register your reducers here.\nimport {\n  APP_SUCCESS,\n  APP_STARTLOADING,\n  APP_STOPLOADING,\n  APP_STARTUP_ERROR,\n  PRODUCTS_LIST_ERROR,\n} from '../types'\n\n\nexport default (state = InitialState, action) => {\n\n  switch (action.type) {\n\n    case APP_SUCCESS:\n      return state\n        .set('isLoading', false)\n        .set('isLoaded', true)\n        .set('error', null)\n\n    case APP_STARTLOADING:\n      return state\n        .set('isLoading', true)\n\n    case APP_STOPLOADING:\n      return state\n        .set('isLoading', false)\n\n    case APP_STARTUP_ERROR:\n      return state\n        .set('errorSource', 'Startup')\n        .set('error', action.payload)\n        .set('isLoading', false)\n\n    case PRODUCTS_LIST_ERROR:\n      return state\n        .set('errorSource', 'Products list')\n        .set('error', action.payload)\n        .set('isLoading', false)\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}