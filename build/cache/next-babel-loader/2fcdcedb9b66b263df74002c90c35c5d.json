{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Applications/AMPPS/www/react-repo-2020-7eleven.ca/components/CheckConnection/CheckConnection.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar CheckConnection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckConnection, _React$Component);\n\n  function CheckConnection(props) {\n    var _this;\n\n    _classCallCheck(this, CheckConnection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckConnection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"check\", function () {\n      var isOnline = navigator.onLine;\n      var interval = isOnline ? 10000 : 2000;\n\n      if (!isOnline) {\n        if (!_this.state.open) _this.setState({\n          open: true\n        });\n      } else {\n        if (_this.state.open) _this.setState({\n          open: false\n        });\n      } // check connetion every 10 seconds\n\n\n      setTimeout(function () {\n        return _this.check();\n      }, interval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(CheckConnection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.check();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"You are off-line, please check your connection...\");\n    }\n  }]);\n\n  return CheckConnection;\n}(React.Component);\n\nexport default CheckConnection;","map":{"version":3,"sources":["/Applications/AMPPS/www/react-repo-2020-7eleven.ca/components/CheckConnection/CheckConnection.js"],"names":["React","PropTypes","CheckConnection","props","isOnline","navigator","onLine","interval","state","open","setState","setTimeout","check","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAGMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;;AADiB,4DAYX,YAAM;AACZ,UAAMC,QAAQ,GAAGC,SAAS,CAACC,MAA3B;AACA,UAAMC,QAAQ,GAAGH,QAAQ,GAAG,KAAH,GAAW,IAApC;;AACA,UAAI,CAACA,QAAL,EAAe;AACb,YAAI,CAAC,MAAKI,KAAL,CAAWC,IAAhB,EAAsB,MAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAd;AACvB,OAFD,MAEO;AACL,YAAI,MAAKD,KAAL,CAAWC,IAAf,EAAqB,MAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAd;AACtB,OAPW,CAQZ;;;AACAE,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAKC,KAAL,EAAN;AAAA,OAAD,EAAqBL,QAArB,CAAV;AACD,KAtBkB;;AAAA,kEAwBL,YAAM;AAClB,YAAKG,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KA1BkB;;AAGjB,UAAKD,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,WAAKG,KAAL;AACD;;;6BAkBQ;AACP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF;AAKD;;;;EAnC2BZ,KAAK,CAACa,S;;AAwCpC,eAAeX,eAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass CheckConnection extends React.Component{\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  componentDidMount() {\n    this.check()\n  }\n\n  check = () => {\n    const isOnline = navigator.onLine\n    const interval = isOnline ? 10000 : 2000\n    if (!isOnline) {\n      if (!this.state.open) this.setState({ open: true })\n    } else {\n      if (this.state.open) this.setState({ open: false })\n    }\n    // check connetion every 10 seconds\n    setTimeout(() => this.check(), interval)\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        You are off-line, please check your connection...\n      </React.Fragment>\n    )\n  }\n\n}\n\n\nexport default CheckConnection\n"]},"metadata":{},"sourceType":"module"}