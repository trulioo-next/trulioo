{"ast":null,"code":"'use strict';\n\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Fetch from './fetch'; // TODO : \n// ADD THESE TO ENV VARIABLES \n//\n\nconst APPORIGIN = 'development';\nconst API_HOST = 'localhost';\nconst API_PORT = '8000'; // TODO: API Services health check\n\nexport default (function () {\n  const ORIGIN = `https://${APPORIGIN}`; // const API_URI = `https://${API_HOST}:${API_PORT}`\n\n  const API_URI = '';\n\n  function setOptions(method = 'GET', options) {\n    // console.log(options);\n    const headers = options.headers || {};\n    return _objectSpread({}, options, {\n      method,\n      headers: _objectSpread({\n        \"Origin\": ORIGIN,\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }, headers)\n    });\n  }\n\n  return {\n    post: function (path, data, options = {}) {\n      const url = `${API_URI}${path}`;\n      return Fetch(url, setOptions('POST', _objectSpread({}, options, {\n        body: _JSON$stringify(data)\n      })));\n    },\n    get: function (path, options) {\n      const url = `${API_URI}${path}`;\n      return Fetch(url, setOptions('GET', options));\n    },\n    put: function (path, data, options = {}) {\n      const url = `${API_URI}${path}`;\n      return Fetch(url, setOptions('PUT', _objectSpread({}, options, {\n        body: _JSON$stringify(data)\n      })));\n    },\n    delete: function (path, options) {\n      const url = `${API_URI}${path}`;\n      return Fetch(url, setOptions('DELETE', options));\n    }\n  };\n})();","map":{"version":3,"sources":["/Applications/AMPPS/www/react-repo-2020-7eleven.ca/utils/api.js"],"names":["Fetch","APPORIGIN","API_HOST","API_PORT","ORIGIN","API_URI","setOptions","method","options","headers","post","path","data","url","body","get","put","delete"],"mappings":"AAAA;;;;AACA,OAAOA,KAAP,MAAkB,SAAlB,C,CAEA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,aAAlB;AACA,MAAMC,QAAQ,GAAG,WAAjB;AACA,MAAMC,QAAQ,GAAG,MAAjB,C,CAEA;;AAEA,eAAe,CAAC,YAAW;AAEzB,QAAMC,MAAM,GAAI,WAAUH,SAAU,EAApC,CAFyB,CAGzB;;AACA,QAAMI,OAAO,GAAG,EAAhB;;AAEA,WAASC,UAAT,CAAoBC,MAAM,GAAG,KAA7B,EAAoCC,OAApC,EAA6C;AAC3C;AACA,UAAMC,OAAO,GAAGD,OAAO,CAACC,OAAR,IAAmB,EAAnC;AACA,6BACKD,OADL;AAEED,MAAAA,MAFF;AAGEE,MAAAA,OAAO;AACL,kBAAUL,MADL;AAEL,wBAAgB;AAFX,SAGFK,OAHE;AAHT;AASD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAE,UAASC,IAAT,EAAeC,IAAf,EAAqBJ,OAAO,GAAG,EAA/B,EAAmC;AACvC,YAAMK,GAAG,GAAI,GAAER,OAAQ,GAAEM,IAAK,EAA9B;AACA,aAAOX,KAAK,CAACa,GAAD,EAAMP,UAAU,CAAC,MAAD,oBACvBE,OADuB;AAE1BM,QAAAA,IAAI,EAAE,gBAAeF,IAAf;AAFoB,SAAhB,CAAZ;AAID,KAPI;AAQLG,IAAAA,GAAG,EAAE,UAASJ,IAAT,EAAeH,OAAf,EAAwB;AAC3B,YAAMK,GAAG,GAAI,GAAER,OAAQ,GAAEM,IAAK,EAA9B;AACD,aAAOX,KAAK,CAACa,GAAD,EAAMP,UAAU,CAAC,KAAD,EAAQE,OAAR,CAAhB,CAAZ;AACA,KAXI;AAYLQ,IAAAA,GAAG,EAAE,UAASL,IAAT,EAAeC,IAAf,EAAqBJ,OAAO,GAAG,EAA/B,EAAmC;AACtC,YAAMK,GAAG,GAAI,GAAER,OAAQ,GAAEM,IAAK,EAA9B;AACA,aAAOX,KAAK,CAACa,GAAD,EAAMP,UAAU,CAAC,KAAD,oBACvBE,OADuB;AAE1BM,QAAAA,IAAI,EAAE,gBAAeF,IAAf;AAFoB,SAAhB,CAAZ;AAID,KAlBI;AAmBLK,IAAAA,MAAM,EAAE,UAASN,IAAT,EAAeH,OAAf,EAAwB;AAC9B,YAAMK,GAAG,GAAI,GAAER,OAAQ,GAAEM,IAAK,EAA9B;AACA,aAAOX,KAAK,CAACa,GAAD,EAAMP,UAAU,CAAC,QAAD,EAAWE,OAAX,CAAhB,CAAZ;AACD;AAtBI,GAAP;AAyBD,CA7Cc,GAAf","sourcesContent":["'use strict';\nimport Fetch from './fetch'\n\n// TODO : \n// ADD THESE TO ENV VARIABLES \n//\nconst APPORIGIN = 'development'\nconst API_HOST = 'localhost'\nconst API_PORT = '8000'\n\n// TODO: API Services health check\n\nexport default (function() {\n\n  const ORIGIN = `https://${APPORIGIN}`\n  // const API_URI = `https://${API_HOST}:${API_PORT}`\n  const API_URI = ''\n\n  function setOptions(method = 'GET', options) {\n    // console.log(options);\n    const headers = options.headers || {}\n    return {\n      ...options,\n      method,\n      headers: {\n        \"Origin\": ORIGIN,\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        ...headers\n      },\n    }\n  }\n\n  return {\n    post: function(path, data, options = {}) {\n      const url = `${API_URI}${path}`\n      return Fetch(url, setOptions('POST', {\n        ...options,\n        body: JSON.stringify(data),\n      }))\n    },\n    get: function(path, options) {\n      const url = `${API_URI}${path}`\n     return Fetch(url, setOptions('GET', options))\n    },\n    put: function(path, data, options = {}) {\n      const url = `${API_URI}${path}`\n      return Fetch(url, setOptions('PUT', {\n        ...options,\n        body: JSON.stringify(data),\n      }))\n    },\n    delete: function(path, options) {\n      const url = `${API_URI}${path}`\n      return Fetch(url, setOptions('DELETE', options))\n    }\n  }\n\n})()\n"]},"metadata":{},"sourceType":"module"}