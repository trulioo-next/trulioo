{"ast":null,"code":"'use strict'; // TODO: Implement message domian\n\nconst MESSAGES = {\n  ERROR: {\n    API: \"Server not available, please try later\"\n  }\n}; // TODO: Implement error handler with admin notification system with log\n\nexport default {\n  network: error => {\n    if (error.message.includes('request failed')) throw new Error(MESSAGES.ERROR.API);\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Applications/AMPPS/www/react-repo-2020-7eleven.ca/utils/errorHandler.js"],"names":["MESSAGES","ERROR","API","network","error","message","includes","Error"],"mappings":"AAAA,a,CAGA;;AAEA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAC;AACJC,IAAAA,GAAG,EAAE;AADD;AADS,CAAjB,C,CAMA;;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAGC,KAAD,IAAW;AAClB,QAAGA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,gBAAvB,CAAH,EAA6C,MAAM,IAAIC,KAAJ,CAAUP,QAAQ,CAACC,KAAT,CAAeC,GAAzB,CAAN;AAC7C,UAAME,KAAN;AACD;AAJY,CAAf","sourcesContent":["'use strict'\n\n\n// TODO: Implement message domian\n\nconst MESSAGES = {\n  ERROR:{\n    API: \"Server not available, please try later\"\n  }\n}\n\n// TODO: Implement error handler with admin notification system with log\n\nexport default {\n  network: (error) => {\n    if(error.message.includes('request failed')) throw new Error(MESSAGES.ERROR.API)\n    throw error\n  },\n}\n"]},"metadata":{},"sourceType":"module"}