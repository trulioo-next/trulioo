{"ast":null,"code":"/**\n* Create the store with redux sagas\n**/\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './reducers';\nimport rootSagas from './rootSagas';\nvar sagaMiddleware = createSagaMiddleware({// logger: (leval, ...args) => {},\n  // onError: () => {}\n});\nexport default function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Create the store with middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  var middlewares = [sagaMiddleware];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares)]; // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n\n  /* eslint-disable no-underscore-dangle, indent */\n\n  var composeEnhancers = process.env.NODE_ENV !== 'production' && true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n  /* eslint-enable */\n\n  var store = createStore(createReducer(), fromJS(initialState), composeEnhancers.apply(void 0, enhancers));\n  sagaMiddleware.run(rootSagas); // store.runSagaTask = () => {\n  //   store.sagaTask = sagaMiddleware.run(rootSagas)\n  // }\n  // //\n  // store.runSagaTask()\n  // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n\n  store.injectedSagas = {}; // Saga registry\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n\n  /* istanbul ignore next */\n\n  if (module.hot) {\n    module.hot.accept('./reducers', function () {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Applications/AMPPS/www/react-repo-2020-7eleven.ca/stores/configureStore.js"],"names":["createStore","applyMiddleware","compose","fromJS","createSagaMiddleware","createReducer","rootSagas","sagaMiddleware","configureStore","initialState","middlewares","enhancers","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","runSaga","injectedReducers","injectedSagas","module","hot","accept","replaceReducer"],"mappings":"AAAA;;;AAIA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,IAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAC1C;AACA;AAF0C,CAAD,CAA3C;AAKA,eAAe,SAASI,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAExD;AACA;AACA,MAAMC,WAAW,GAAG,CAACH,cAAD,CAApB;AAEA,MAAMI,SAAS,GAAG,CAACV,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CAAlB,CANwD,CAQxD;;AACA;;AACA,MAAME,gBAAgB,GACpBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,YAEAC,MAAM,CAACC,oCAFP,GAGID,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CAHJ,GAIIf,OALN;AAMA;;AAEA,MAAMgB,KAAK,GAAGlB,WAAW,CACvBK,aAAa,EADU,EAEvBF,MAAM,CAACM,YAAD,CAFiB,EAGvBG,gBAAgB,MAAhB,SAAoBD,SAApB,CAHuB,CAAzB;AAMAJ,EAAAA,cAAc,CAACY,GAAf,CAAmBb,SAAnB,EAxBwD,CAyBxD;AACA;AACA;AACA;AACA;AAEA;;AACAY,EAAAA,KAAK,CAACE,OAAN,GAAgBb,cAAc,CAACY,GAA/B;AACAD,EAAAA,KAAK,CAACG,gBAAN,GAAyB,EAAzB,CAjCwD,CAiC5B;;AAC5BH,EAAAA,KAAK,CAACI,aAAN,GAAsB,EAAtB,CAlCwD,CAkC/B;AAEzB;;AACA;;AACA,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpCP,MAAAA,KAAK,CAACQ,cAAN,CAAqBrB,aAAa,CAACa,KAAK,CAACG,gBAAP,CAAlC;AACD,KAFD;AAGD;;AAED,SAAOH,KAAP;AACD","sourcesContent":["/**\n* Create the store with redux sagas\n**/\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { fromJS } from 'immutable'\nimport createSagaMiddleware from 'redux-saga'\n\nimport createReducer from './reducers'\nimport rootSagas from './rootSagas'\n\n\nconst sagaMiddleware = createSagaMiddleware({\n  // logger: (leval, ...args) => {},\n  // onError: () => {}\n})\n\nexport default function configureStore(initialState = {}) {\n\n  // Create the store with middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  const middlewares = [sagaMiddleware]\n\n  const enhancers = [applyMiddleware(...middlewares)]\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle, indent */\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers),\n  )\n\n  sagaMiddleware.run(rootSagas)\n  // store.runSagaTask = () => {\n  //   store.sagaTask = sagaMiddleware.run(rootSagas)\n  // }\n  // //\n  // store.runSagaTask()\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run\n  store.injectedReducers = {} // Reducer registry\n  store.injectedSagas = {} // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createReducer(store.injectedReducers))\n    })\n  }\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}